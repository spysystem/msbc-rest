<?php
/**
 * SpyExchangeRatesTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Spy\MsbcRestClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Microsoft Business Center API
 *
 * The Microsoft Business Center API is a RESTful API that provides an interface to the Microsoft Business Center service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.6.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Spy\MsbcRestClient\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * SpyExchangeRatesTest Class Doc Comment
 *
 * @category    Class
 * @description SpyExchangeRates
 * @package     Spy\MsbcRestClient
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class SpyExchangeRatesTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "SpyExchangeRates"
     */
    public function testSpyExchangeRates()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "at_odata_etag"
     */
    public function testPropertyAtOdataEtag()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "currency_code"
     */
    public function testPropertyCurrencyCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "starting_date"
     */
    public function testPropertyStartingDate()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "relational_currency_code"
     */
    public function testPropertyRelationalCurrencyCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "exchange_rate_amount"
     */
    public function testPropertyExchangeRateAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "relational_exch_rate_amount"
     */
    public function testPropertyRelationalExchRateAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "adjustment_exch_rate_amount"
     */
    public function testPropertyAdjustmentExchRateAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "relational_adjmt_exch_rate_amt"
     */
    public function testPropertyRelationalAdjmtExchRateAmt()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "fix_exchange_rate_amount"
     */
    public function testPropertyFixExchangeRateAmount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
