<?php
/**
 * SpyVatPostingSetupAllOfTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Spy\MsbcRestClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Microsoft Business Center API
 *
 * The Microsoft Business Center API is a RESTful API that provides an interface to the Microsoft Business Center service.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Spy\MsbcRestClient\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * SpyVatPostingSetupAllOfTest Class Doc Comment
 *
 * @category    Class
 * @description SpyVatPostingSetupAllOf
 * @package     Spy\MsbcRestClient
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class SpyVatPostingSetupAllOfTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "SpyVatPostingSetupAllOf"
     */
    public function testSpyVatPostingSetupAllOf()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vat_bus_posting_group"
     */
    public function testPropertyVatBusPostingGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vat_prod_posting_group"
     */
    public function testPropertyVatProdPostingGroup()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "blocked"
     */
    public function testPropertyBlocked()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vat_identifier"
     */
    public function testPropertyVatIdentifier()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vat_percent"
     */
    public function testPropertyVatPercent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vat_calculation_type"
     */
    public function testPropertyVatCalculationType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "unrealized_vat_type"
     */
    public function testPropertyUnrealizedVatType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "adjust_for_payment_discount"
     */
    public function testPropertyAdjustForPaymentDiscount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sales_vat_account"
     */
    public function testPropertySalesVatAccount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sales_vat_unreal_account"
     */
    public function testPropertySalesVatUnrealAccount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purchase_vat_account"
     */
    public function testPropertyPurchaseVatAccount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "purch_vat_unreal_account"
     */
    public function testPropertyPurchVatUnrealAccount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reverse_chrg_vat_acc"
     */
    public function testPropertyReverseChrgVatAcc()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reverse_chrg_vat_unreal_acc"
     */
    public function testPropertyReverseChrgVatUnrealAcc()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "vat_clause_code"
     */
    public function testPropertyVatClauseCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "eu_service"
     */
    public function testPropertyEuService()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "certificate_of_supply_required"
     */
    public function testPropertyCertificateOfSupplyRequired()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tax_category"
     */
    public function testPropertyTaxCategory()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
